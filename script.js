// --- DOM REFERENCES ---
const startScreen = document.getElementById('start-screen');
const quizScreen = document.getElementById('quiz-screen');
const endScreen = document.getElementById('end-screen');
const startButton = document.getElementById('start-button');
const restartButton = document.getElementById('restart-button');
const questionText = document.getElementById('question-text');
const optionsContainer = document.getElementById('options-container');
const scoreText = document.getElementById('score-text');
const healthDisplay = document.getElementById('health-display');
const goldDisplay = document.getElementById('gold-display');
const progressBar = document.getElementById('progress-bar');
const monsterName = document.getElementById('monster-name');
const endTitle = document.getElementById('end-title');
const endMessage = document.getElementById('end-message');
const endScoreLabel = document.getElementById('end-score-label');

// --- GAME VARIABLES ---
let currentQuestionIndex = 0;
let gold = 0;
let health = 0;
const MAX_HEALTH = 3;
let questions = [];

// --- LISTA DE MONSTROS (DESAFIOS) ---
const monsterList = [
    "Slime de Alceno", "Gosma de Alcano", "Vulto de Haleto", "Espectro do Benzeno",
    "Mago de √Ålcool", "Diabrete do √âter", "Bugbear da Cetona", "Goblin do Alde√≠do",
    "G√°rgula do √Åcido", "Zumbi da Amina", "Esqueleto de Nitrila", "Troll de Ti√≥l",
    "Lich da Amida", "Elemental do √âster", "Drag√£o de Sulfona"
];

// --- BANCO DE PERGUNTAS (Baseado no PDF e CORRIGIDO) ---
function loadQuestions() {
    questions = [
        {
            question: "Qual a f√≥rmula geral dos Alcanos (parafinas)?",
            options: ["C<sub>n</sub>H<sub>2n+2</sub>", "C<sub>n</sub>H<sub>2n</sub>", "C<sub>n</sub>H<sub>2n-2</sub>", "C<sub>n</sub>H<sub>2n-1</sub>"],
            correctAnswer: "C<sub>n</sub>H<sub>2n+2</sub>"
        },
        {
            question: "O Benzeno, Naftaleno e Antraceno s√£o exemplos de qual tipo de Hidrocarboneto?",
            options: ["Alif√°ticos", "Alic√≠clicos", "Arom√°ticos", "Alcinos"],
            correctAnswer: "Arom√°ticos"
        },
        {
            question: "Como √© classificada a fun√ß√£o org√¢nica com a f√≥rmula geral R-X (onde X = F, Cl, Br, I)?",
            options: ["√Ålcool", "Haleto de Alquilo", "Amina", "√âter"],
            correctAnswer: "Haleto de Alquilo"
        },
        {
            question: "A f√≥rmula R-OH, onde 'R' √© um grupo alquila, representa qual fun√ß√£o oxigenada?",
            options: ["Fenol", "√âster", "√Ålcool", "Alde√≠do"],
            correctAnswer: "√Ålcool"
        },
        {
            question: "Qual fun√ß√£o oxigenada possui um grupo carbonila (C=O) na ponta de uma cadeia (ligado a um H)?",
            options: ["Cetona", "Alde√≠do", "√Åcido Carbox√≠lico", "√âter"],
            correctAnswer: "Alde√≠do"
        },
        {
            question: "Qual fun√ß√£o oxigenada possui um grupo carbonila (C=O) entre dois carbonos (R-C(=O)-R')?",
            options: ["Cetona", "Alde√≠do", "√âster", "√Ålcool"],
            correctAnswer: "Cetona"
        },
        {
            question: "Qual fun√ß√£o √© representada pela estrutura R-C(=O)OH?",
            options: ["√âster", "Anidrido", "√Åcido Carbox√≠lico", "√Ålcool"],
            correctAnswer: "√Åcido Carbox√≠lico"
        },
        {
            question: "A qual grande grupo de fun√ß√µes org√¢nicas pertencem as Aminas (R-NH<sub>2</sub>)?",
            options: ["Fun√ß√µes Sulfuradas", "Fun√ß√µes Oxigenadas", "Fun√ß√µes Nitrogenadas", "Haletos Org√¢nicos"],
            correctAnswer: "Fun√ß√µes Nitrogenadas"
        },
        {
            question: "A f√≥rmula R-C‚â°N representa qual fun√ß√£o nitrogenada?",
            options: ["Nitrila", "Imina", "Hidrazona", "Amina Secund√°ria"],
            correctAnswer: "Nitrila"
        },
        {
            question: "Nas fun√ß√µes sulfuradas, o prefixo 'tio-' √© usado para substituir Oxig√™nio por qual elemento?",
            options: ["Nitrog√™nio", "Fl√∫or", "Enxofre", "Carbono"],
            correctAnswer: "Enxofre"
        },
        {
            question: "Qual fun√ß√£o sulfurada √© an√°loga ao √°lcool (R-OH) e √© representada por R-SH?",
            options: ["Ti√≥is (ou Mercaptanas)", "Tio√©teres (ou Sulfetos)", "Dissulfetos", "Sulfonas"],
            correctAnswer: "Ti√≥is (ou Mercaptanas)"
        },
        {
            question: "A fun√ß√£o R-S-R' √© conhecida como:",
            options: ["Dissulfeto", "Tioacetal", "Ti√≥l", "Tio√©ter (ou Sulfeto)"],
            correctAnswer: "Tio√©ter (ou Sulfeto)"
        },
        {
            question: "Qual √© o nome da fun√ß√£o mista (R-C(=O)-N)?",
            options: ["Amida", "Amina", "Imida", "Lactona"],
            correctAnswer: "Amida"
        },
        {
            question: "Na mol√©cula da Vanilina (p√°g. 17), quais fun√ß√µes est√£o presentes?",
            options: ["√Ålcool, Cetona e √âter", "Fenol, Alde√≠do e √âter", "√Åcido Carbox√≠lico e √Ålcool", "Fenol e Cetona"],
            correctAnswer: "Fenol, Alde√≠do e √âter"
        },
        {
            question: "Quais fun√ß√µes est√£o presentes na mol√©cula do Aspartame (p√°g. 18)?",
            options: ["Amina, Amida, √âster e √Åcido Carbox√≠lico", "√Ålcool, Cetona, √âter e Amina", "√âter, √Ålcool, Amida e Fenol", "Nitrila, Fenol, √âster e Amina"],
            correctAnswer: "Amina, Amida, √âster e √Åcido Carbox√≠lico"
        }
    ];
}

// --- EVENT LISTENERS ---
startButton.addEventListener('click', startGame);
restartButton.addEventListener('click', startGame);

// --- GAME LOGIC ---

// Inicia o Jogo
function startGame() {
    loadQuestions(); 
    
    currentQuestionIndex = 0;
    gold = 0;
    health = MAX_HEALTH;

    updateHealthBar();
    updateGoldDisplay();
    
    endScreen.classList.add('hide');
    startScreen.classList.add('hide');
    quizScreen.classList.remove('hide');

    showNextEncounter();
}

// Mostra o pr√≥ximo "Monstro" (Pergunta)
function showNextEncounter() {
    resetState();

    // Se o jogador venceu todos os monstros
    if (currentQuestionIndex >= questions.length) {
        endGame(true); // Venceu
        return;
    }

    const question = questions[currentQuestionIndex];
    
    // Define o monstro e a pergunta
    monsterName.innerText = `Desafio ${currentQuestionIndex + 1}: O ${monsterList[currentQuestionIndex]}`;
    questionText.innerHTML = question.question; 
    
    let shuffledOptions = [...question.options].sort(() => Math.random() - 0.5);

    shuffledOptions.forEach(option => {
        const button = document.createElement('button');
        // *** ESTA √â A CORRE√á√ÉO DO BUG ***
        button.innerHTML = option; 
        button.classList.add('option-btn');
        button.addEventListener('click', selectAnswer);
        optionsContainer.appendChild(button);
    });

    updateProgressBar();
}

// Reseta o estado (limpa bot√µes)
function resetState() {
    while (optionsContainer.firstChild) {
        optionsContainer.removeChild(optionsContainer.firstChild);
    }
}

// Processa a sele√ß√£o da resposta ("Ataque")
function selectAnswer(e) {
    const selectedButton = e.target;
    // Compara usando innerHTML para garantir que o HTML seja lido corretamente
    const correct = selectedButton.innerHTML === questions[currentQuestionIndex].correctAnswer;

    Array.from(optionsContainer.children).forEach(button => {
        if (button.innerHTML === questions[currentQuestionIndex].correctAnswer) {
            button.classList.add('correct');
        }
        button.disabled = true; 
    });

    if (correct) {
        // Ganha uma quantidade fixa de ouro (pois n√£o h√° mais tempo)
        let goldEarned = 100;
        gold += goldEarned;
        updateGoldDisplay();
        
        // Vai para a pr√≥xima pergunta
        currentQuestionIndex++;
        setTimeout(showNextEncounter, 1500); // Pausa de 1.5s
    } else {
        // Resposta errada
        selectedButton.classList.add('incorrect');
        takeDamage();
    }
}


// --- FUN√á√ïES DO RPG ---

// Jogador toma dano
function takeDamage() {
    health--;
    updateHealthBar();
    
    // Anima√ß√£o de tomar dano
    document.body.classList.add('taking-damage');
    
    setTimeout(() => {
        document.body.classList.remove('taking-damage');
        
        if (health <= 0) {
            endGame(false); // Perdeu
        } else {
            // Sobreviveu, mas passa para a pr√≥xima pergunta
            currentQuestionIndex++;
            setTimeout(showNextEncounter, 1500);
        }
    }, 500); // Dura√ß√£o da anima√ß√£o "shake"
}

// Atualiza a barra de HP
function updateHealthBar() {
    const fullHeart = '‚ù§Ô∏è';
    const emptyHeart = 'üñ§';
    healthDisplay.innerText = "HP: " + fullHeart.repeat(health) + emptyHeart.repeat(MAX_HEALTH - health);
}

// Atualiza o Ouro
function updateGoldDisplay() {
    goldDisplay.innerText = `Ouro: ${gold}`;
}

// Atualiza a Barra de Progresso (Mapa)
function updateProgressBar() {
    const progressPercent = ((currentQuestionIndex) / questions.length) * 100;
    progressBar.style.width = `${progressPercent}%`;
}

// Finaliza o Jogo
function endGame(didWin) {
    quizScreen.classList.add('hide');
    endScreen.classList.remove('hide');

    if (didWin) {
        endScreen.className = 'win';
        endTitle.innerText = "Voc√™ Venceu!";
        endMessage.innerText = "Voc√™ derrotou todos os desafios e alcan√ßou o Ba√∫ de Ouro!";
        endScoreLabel.innerText = "Ouro Total Encontrado:";
        scoreText.innerText = gold;
    } else {
        endScreen.className = 'lose';
        endTitle.innerText = "Game Over";
        endMessage.innerText = "Voc√™ foi derrotado e n√£o alcan√ßou o ba√∫...";
        endScoreLabel.innerText = "Ouro recuperado:";
        scoreText.innerText = gold;
    }
}